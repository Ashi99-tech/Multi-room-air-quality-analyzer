{"ast":null,"code":"var _jsxFileName = \"C:\\\\simpleai_agent\\\\llm-sensor-agent\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AirQualityAgent() {\n  _s();\n  var _response$tables;\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const submitQuery = async () => {\n    setLoading(true);\n    setError(null);\n    setResponse(null);\n    try {\n      const res = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: query,\n          return_tables: true,\n          return_charts: true\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(data);\n      } else {\n        setError(data.detail || \"Error in response\");\n      }\n    } catch (e) {\n      setError(\"Network error: \" + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Prepare chart data if available\n  const renderCharts = () => {\n    if (!(response !== null && response !== void 0 && response.charts)) return null;\n    return Object.entries(response.charts).map(([room, data]) => {\n      const chartData = {\n        labels: data.hours.map(h => `${h}:00`),\n        datasets: [{\n          label: `Temperature in ${room}`,\n          data: data.temperatures,\n          fill: false,\n          borderColor: \"blue\",\n          tension: 0.3\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, room, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Air Quality AI Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 4,\n      style: {\n        width: \"100%\"\n      },\n      placeholder: \"Ask your question...\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitQuery,\n      disabled: loading || !query.trim(),\n      children: loading ? \"Analyzing...\" : \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: response.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), ((_response$tables = response.tables) === null || _response$tables === void 0 ? void 0 : _response$tables.summary_stats_markdown) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summary Statistics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: response.tables.summary_stats_markdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), renderCharts()]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AirQualityAgent, \"o8zbejMWxUSGMt8uweTAsbbA6ts=\");\n_c = AirQualityAgent;\nvar _c;\n$RefreshReg$(_c, \"AirQualityAgent\");","map":{"version":3,"names":["React","useState","ReactMarkdown","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","AirQualityAgent","_s","_response$tables","query","setQuery","response","setResponse","loading","setLoading","error","setError","submitQuery","res","fetch","method","headers","body","JSON","stringify","question","return_tables","return_charts","data","json","ok","detail","e","message","renderCharts","charts","Object","entries","map","room","chartData","labels","hours","h","datasets","label","temperatures","fill","borderColor","tension","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","margin","padding","rows","width","placeholder","value","onChange","target","onClick","disabled","trim","color","answer","tables","summary_stats_markdown","_c","$RefreshReg$"],"sources":["C:/simpleai_agent/llm-sensor-agent/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\n\nexport default function AirQualityAgent() {\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const submitQuery = async () => {\n    setLoading(true);\n    setError(null);\n    setResponse(null);\n\n    try {\n      const res = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question: query, return_tables: true, return_charts: true }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(data);\n      } else {\n        setError(data.detail || \"Error in response\");\n      }\n    } catch (e) {\n      setError(\"Network error: \" + e.message);\n    }\n    setLoading(false);\n  };\n\n  // Prepare chart data if available\n  const renderCharts = () => {\n    if (!response?.charts) return null;\n    return Object.entries(response.charts).map(([room, data]) => {\n      const chartData = {\n        labels: data.hours.map(h => `${h}:00`),\n        datasets: [\n          {\n            label: `Temperature in ${room}`,\n            data: data.temperatures,\n            fill: false,\n            borderColor: \"blue\",\n            tension: 0.3,\n          },\n        ],\n      };\n      return (\n        <div key={room} style={{ marginBottom: \"30px\" }}>\n          <h3>{room}</h3>\n          <Line data={chartData} />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: 700, margin: \"auto\", padding: 20 }}>\n      <h1>Air Quality AI Agent</h1>\n      <textarea\n        rows={4}\n        style={{ width: \"100%\" }}\n        placeholder=\"Ask your question...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button onClick={submitQuery} disabled={loading || !query.trim()}>\n        {loading ? \"Analyzing...\" : \"Submit\"}\n      </button>\n\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n\n      {response && (\n        <>\n          <h2>Answer:</h2>\n          <ReactMarkdown>{response.answer}</ReactMarkdown>\n\n          {response.tables?.summary_stats_markdown && (\n            <>\n              <h2>Summary Statistics:</h2>\n              <ReactMarkdown>{response.tables.summary_stats_markdown}</ReactMarkdown>\n            </>\n          )}\n\n          {renderCharts()}\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}